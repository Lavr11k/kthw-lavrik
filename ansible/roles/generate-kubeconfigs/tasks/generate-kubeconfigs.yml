---
- name: Create kubeconfigs output directory
  ansible.builtin.file:
    path: "{{ kubeconfigs_path }}"
    state: directory

- name: Create initial kubeconfig
  ansible.builtin.command: >
    kubectl config set-cluster kubernetes-the-hard-way
    --certificate-authority="{{ certs_path }}/ca.crt"
    --embed-certs=true
    --server={{ item.server }}
    --kubeconfig="{{ kubeconfigs_path }}/{{ item.name }}.kubeconfig"
  args:
    creates: "{{ kubeconfigs_path }}/{{ item.name }}.kubeconfig"
  loop:
    - { name: "admin", server: "https://127.0.0.1:6443" }
    - { name: "node-0", server: "https://server.kubernetes.local:6443" }
    - { name: "node-1", server: "https://server.kubernetes.local:6443" }
    - { name: "kube-proxy", server: "https://server.kubernetes.local:6443" }
    - { name: "kube-scheduler", server: "https://server.kubernetes.local:6443" }
    - {
        name: "kube-controller-manager",
        server: "https://server.kubernetes.local:6443",
      }
  register: initialkubeconfig

- name: Set credentials for kubeconfig
  ansible.builtin.command: >
    kubectl config set-credentials {{ item.user }}
    --client-certificate="{{ certs_path }}/{{ item.name }}.crt"
    --client-key="{{ certs_path }}/{{ item.name }}.key"
    --embed-certs=true
    --kubeconfig="{{ kubeconfigs_path }}/{{ item.name }}.kubeconfig"
  loop:
    - { name: "admin", user: "admin" }
    - { name: "node-0", user: "system:node:node-0" }
    - { name: "node-1", user: "system:node:node-1" }
    - { name: "kube-proxy", user: "system:kube-proxy" }
    - { name: "kube-scheduler", user: "system:kube-scheduler" }
    - {
        name: "kube-controller-manager",
        user: "system:kube-controller-manager",
      }
  when: initialkubeconfig.changed

- name: Set context for components kubeconfig
  ansible.builtin.command: >
    kubectl config set-context default
    --cluster=kubernetes-the-hard-way
    --user={{ item.user }}
    --kubeconfig="{{ kubeconfigs_path }}/{{ item.name }}.kubeconfig"
  loop:
    - { name: "admin", user: "admin" }
    - { name: "node-0", user: "system:node:node-0" }
    - { name: "node-1", user: "system:node:node-1" }
    - { name: "kube-proxy", user: "system:kube-proxy" }
    - { name: "kube-scheduler", user: "system:kube-scheduler" }
    - {
        name: "kube-controller-manager",
        user: "system:kube-controller-manager",
      }
  when: initialkubeconfig.changed

- name: Use context for kubeconfig
  ansible.builtin.command: >
    kubectl config use-context default
    --kubeconfig="{{ kubeconfigs_path }}/{{ item }}.kubeconfig"
  loop:
    - admin
    - node-0
    - node-1
    - kube-proxy
    - kube-scheduler
    - kube-controller-manager
  when: initialkubeconfig.changed
    
